// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QBSDK;

#nullable disable

namespace QBSDK.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250510192828_Adds_Vendor")]
    partial class Adds_Vendor
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QBSDK.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EditSequence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ListID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeModified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ListID")
                        .IsUnique()
                        .HasFilter("[ListID] IS NOT NULL");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("ListID"), false);

                    b.ToTable("Vendor", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
